#policy data #too big to upload to github
# Policy Shapefile - polsf
library(sf)
polsf <- st_read("/Users/jennabrooks/Desktop/Flavor_ban_policy_CA_1")
#pilot data e-commerce
pilot<-load("~/Documents/GitHub/CSS_Capstone_Project/Pilot_data.RData")
pilot<-y
#merge
View(pilot)
library(sf)
shapefile <- st_read("normalized_SE_sf.shp")
library(sf)
shapefile <- st_read("/Users/jennabrooks/Documents/GitHub/CSS_Capstone_Project/normalized_SE_data/normalized_SE_sf.shp")
pilot<-y
#merge
library(sf)
shapefile <- st_read("/Users/jennabrooks/Documents/GitHub/CSS_Capstone_Project/normalized_SE_data/normalized_SE_sf.shp")
View(shapefile)
library(sf)
shapefile <- st_read("/Users/jennabrooks/Documents/GitHub/CSS_Capstone_Project/normalized_SE_data/normalized_SE_sf.shp")
View(shapefile)
library(sf)
shapefile <- st_read("/Users/jennabrooks/Documents/GitHub/CSS_Capstone_Project/normalized_SE_data/pilot_ready.csv")
library(sf)
dat <- read.csv("/Users/jennabrooks/Documents/GitHub/CSS_Capstone_Project/normalized_SE_data/pilot_ready.csv")
dat <- read.csv("/Users/jennabrooks/Documents/GitHub/CSS_Capstone_Project/normalized_SE_data/pilot_ready.csv")
setwd("/Users/jennabrooks/Documents/GitHub/CSS_Capstone_Project")
setwd("/Users/jennabrooks/Documents/GitHub/CSS_Capstone_Project")
getwd()
setwd("/Users/jennabrooks/Documents/GitHub/CSS_Capstone_Project")
getwd()
dat <- read.csv("pilot_ready.csv")
setwd("/Users/jennabrooks/Documents/GitHub/CSS_Capstone_Project")
getwd()
dat <- read.csv("/Users/jennabrooks/Documents/GitHub/CSS_Capstone_Project/pilot_ready.csv")
load("Pilot_data.RData")
View(d)
View(d)
View(try)
View(y)
View(d)
View(d)
# 344 X 80 columns (d)
load("Pilot_data.RData")
dat <- d
# 344 X 80 columns (d)
load("Pilot_data.RData")
dat <- d
head(d)
# 344 X 80 columns (d)
load("Pilot_data.RData")
pilot <- d
head(pilot)
install.packages("sf")
policy <- st_read("Flavor_ban_policy_CA.shp")
# 344 X 80 columns (d)
load("Pilot_data.RData")
pilot <- d
head(pilot)
install.packages("sf")
library(sf)
policy <- st_read("Flavor_ban_policy_CA.shp")
# Visualization: e-commerce prevalence by income tertile
analysis_data %>%
mutate(income_tertile = ntile(MdnHHnc, 3)) %>%
group_by(income_tertile) %>%
summarize(ecomm_rate = mean(has_ecomm)) %>%
ggplot(aes(x = factor(income_tertile), y = ecomm_rate)) +
geom_col(fill = "steelblue") +
labs(
title = "E-Commerce Prevalence by Income Tertile",
x = "Income Tertile (1 = Low, 3 = High)",
y = "Proportion of Retailers with E-Commerce"
) +
theme_minimal()
# Find intersections between e-commerce locations and SE data
intersections <- st_intersects(pilot_ecomm, normalized_SE_sf)
# Notify if some intersections are empty
if (any(lengths(intersections) == 0)) {
message("Some retailers do not intersect with any census tracts.")
}
interse
#Load dataset - pilot and content analysis
pilot <-read.csv("~/Desktop/pilot_ready (1).csv")
content <- read.csv("~/Desktop/df_combined_adjudicated (1).csv")
#only look at the observations in content that have a physical location and e-commerce (25)
content <- content %>% filter(dataset == "brick_click")
library(dplyr)
#Load dataset - pilot and content analysis
pilot <-read.csv("~/Desktop/pilot_ready (1).csv")
content <- read.csv("~/Desktop/df_combined_adjudicated (1).csv")
#only look at the observations in content that have a physical location and e-commerce (25)
content <- content %>% filter(dataset == "brick_click")
#change column name to master_id in content df
names(content)
content <- content[-1, ] #got rid of questions row
names(content)[names(content) == "Q1"] <- "master_id"
#make master_id integer
content$master_id <- as.integer(content$master_id)
# Rename long column name with dplyr --> ecommerce
pilot <- pilot %>%
rename(ecommerce = `Do.they.have.a.website.listed.that.allows.you.to.buy.vaping.products.online...Allows.for.mail.delivery..curbside.pick.up.orders..etc..`)
#JOIN content and pilot data
joined_df <- left_join(pilot, content, by = "master_id")
#Just look at those observations with ecommerce
has_ecomm <- joined_df %>% filter(`ecommerce` == 1)
View(content)
View(joined_df)
View(has_ecomm)
value_counts = has_ecomm['ApprxLc'].value_counts(normalize=False)
View(has_ecomm)
has_ecomm %>%
count(ApprxLc) %>%                      # Count occurrences of each unique ApprxLc
mutate(percent = round(100 * n / sum(n), 2))  # Calculate percent of total
library(ggplot2)
# Define counts
num_flav_banned <- sum(sell_flav_vape$flavor_ban == 1, na.rm = FALSE)
# Number of stores that sold flavored vapes
num_flav_vape <- nrow(joined_df %>% filter(sells_flav_vap == "Yes"))
library(dplyr)
# Rename long column name with dplyr --> ecommerce
pilot <- pilot %>%
rename(ecommerce = `Do.they.have.a.website.listed.that.allows.you.to.buy.vaping.products.online...Allows.for.mail.delivery..curbside.pick.up.orders..etc..`)
#Load dataset - pilot and content analysis
pilot <-read.csv("~/Desktop/pilot_ready (1).csv")
content <- read.csv("~/Desktop/df_combined_adjudicated (1).csv")
#only look at the observations in content that have a physical location and e-commerce (25)
content <- content %>% filter(dataset == "brick_click")
#change column name to master_id in content df
names(content)
content <- content[-1, ] #got rid of questions row
names(content)[names(content) == "Q1"] <- "master_id"
#make master_id integer
content$master_id <- as.integer(content$master_id)
# Rename long column name with dplyr --> ecommerce
pilot <- pilot %>%
rename(ecommerce = `Do.they.have.a.website.listed.that.allows.you.to.buy.vaping.products.online...Allows.for.mail.delivery..curbside.pick.up.orders..etc..`)
#JOIN content and pilot data
joined_df <- left_join(pilot, content, by = "master_id")
#Just look at those observations with ecommerce
has_ecomm <- joined_df %>% filter(`ecommerce` == 1)
# 25 retailers out of 37 with e-commerce have results from content analysis.  This is because 12 of the retailers with e-commerce did not provide delivery. They were pick up only.
#change the column name Q2A --> nvape_wflav
# Question 2A: "Does the website sell nicotine vaping products advertised with FLAVOR descriptors?"
joined_df <- joined_df %>%
rename(sells_flav_vap = Q2A)
has_ecomm %>%
count(ApprxLc) %>%                      # Count occurrences of each unique ApprxLc
mutate(percent = round(100 * n / sum(n), 2))  # Calculate percent of total
# Number of stores that sold flavored vapes
num_flav_vape <- nrow(joined_df %>% filter(sells_flav_vap == "Yes"))
# Total number of stores from content analysis
total_stores <- nrow(content)
# Calculate percentage
percent_flav_vape <- (num_flav_vape / total_stores) * 100
# Print result
print(paste0(round(percent_flav_vape, 1), "% of stores sold flavored vaping products online (", num_flav_vape, " out of ", total_stores, ")"))
library(ggplot2)
# Create a data frame for the pie chart
flav_sales_df <- data.frame(
Category = c("Sold Flavored Vapes", "Did Not Sell Flavored Vapes"),
Count = c(num_flav_vape, total_stores - num_flav_vape)
)
# Calculate percentages
flav_sales_df$Percent <- round((flav_sales_df$Count / sum(flav_sales_df$Count)) * 100, 1)
# Plot the pie chart
ggplot(flav_sales_df, aes(x = "", y = Count, fill = Category)) +
geom_col(width = 1) +
coord_polar(theta = "y") +
geom_text(aes(label = paste0(Percent, "%")),
position = position_stack(vjust = 0.5), size = 5) +
labs(title = "Proportion of Stores Selling Flavored Vaping Products",
fill = "Store Type") +
scale_fill_manual(values = c("Sold Flavored Vapes" = "#f39c12",
"Did Not Sell Flavored Vapes" = "#bdc3c7")) +
theme_void()
# Count how many stores of those with flavored vapes (19) have flav_ban == 1
num_flav_banned <- sum(sell_flav_vape$flavor_ban == 1, na.rm = FALSE)
# Count how many stores of those with flavored vapes (19) have flav_ban == 1
num_flav_banned <- sum(num_flav_vape$flavor_ban == 1, na.rm = FALSE)
# Filter to those stores selling flavored vapes AND located in a banned area
num_flav_banned <- sell_flav_vape %>%
filter(flavor_ban == 1) %>%
nrow()
# Filter to those stores selling flavored vapes AND located in a banned area
num_flav_banned <- num_flav_vape %>%
filter(flavor_ban == 1) %>%
nrow()
# Number of stores that sold flavored vapes
num_flav_vape <- nrow(joined_df %>% filter(sells_flav_vap == "Yes"))
# Total number of stores from content analysis
total_stores <- nrow(content)
# Calculate percentage
percent_flav_vape <- (num_flav_vape / total_stores) * 100
# Print result
print(paste0(round(percent_flav_vape, 1), "% of stores sold flavored vaping products online (", num_flav_vape, " out of ", total_stores, ")"))
# Filter to those stores selling flavored vapes AND located in a banned area
num_flav_banned <- num_flav_vape %>%
filter(flavor_ban == 1) %>%
nrow()
# Number of stores that sold flavored vapes
num_flav_vape <- nrow(joined_df %>% filter(sells_flav_vap == "Yes"))
# Total number of stores from content analysis
total_stores <- nrow(content)
# Calculate percentage
percent_flav_vape <- (num_flav_vape / total_stores) * 100
# Print result
print(paste0(round(percent_flav_vape, 1), "% of stores sold flavored vaping products online (", num_flav_vape, " out of ", total_stores, ")"))
library(ggplot2)
# Create a data frame for the pie chart
flav_sales_df <- data.frame(
Category = c("Sold Flavored Vapes", "Did Not Sell Flavored Vapes"),
Count = c(num_flav_vape, total_stores - num_flav_vape)
)
# Calculate percentages
flav_sales_df$Percent <- round((flav_sales_df$Count / sum(flav_sales_df$Count)) * 100, 1)
# Plot the pie chart
ggplot(flav_sales_df, aes(x = "", y = Count, fill = Category)) +
geom_col(width = 1) +
coord_polar(theta = "y") +
geom_text(aes(label = paste0(Percent, "%")),
position = position_stack(vjust = 0.5), size = 5) +
labs(title = "Proportion of Stores Selling Flavored Vaping Products",
fill = "Store Type") +
scale_fill_manual(values = c("Sold Flavored Vapes" = "#f39c12",
"Did Not Sell Flavored Vapes" = "#bdc3c7")) +
theme_void()
# Filter to those stores selling flavored vapes AND located in a banned area
num_flav_banned <- num_flav_vape %>%
filter(flavor_ban == 1) %>%
nrow()
colnames(joined_df)
# Filter to those stores selling flavored vapes AND located in a banned area
num_flav_banned <- num_flav_vape %>%
filter(flavor_ban == 1) %>%
nrow()
# Step 1: Filter to stores that sold flavored vapes
sell_flav_vape <- joined_df %>%
filter(sells_flav_vap == "Yes")
# Step 2: Count how many of these had a flavor ban
num_flav_banned <- sell_flav_vape %>%
filter(flavor_ban == 1) %>%
nrow()
# Step 3: Print number of banned stores
print(num_flav_banned)  # Should print 11
# Step 4: Calculate and print percent out of compliance
percent_out_of_compliance <- (num_flav_banned / nrow(sell_flav_vape)) * 100
print(paste0(round(percent_out_of_compliance, 1), "% of retailers that sold flavored vaping products were out of compliance with local flavor restrictions."))
# Define counts
num_flav_banned <- sum(sell_flav_vape$flavor_ban == 1, na.rm = FALSE)
num_flav_compliant <- nrow(sell_flav_vape) - num_flav_banned
# Create a data frame
compliance_df <- data.frame(
Status = c("Out of Compliance", "In Compliance"),
Count = c(num_flav_banned, num_flav_compliant)
)
# Add percentage
compliance_df$Percent <- round((compliance_df$Count / sum(compliance_df$Count)) * 100, 1)
# Plot
ggplot(compliance_df, aes(x = "", y = Count, fill = Status)) +
geom_col(width = 1) +
coord_polar(theta = "y") +
geom_text(aes(label = paste0(Percent, "%")),
position = position_stack(vjust = 0.5), size = 5) +
labs(title = "Compliance with Local Flavor Bans",
fill = "Compliance Status") +
scale_fill_manual(values = c("Out of Compliance" = "#e74c3c",
"In Compliance" = "#2ecc71")) +
theme_void()
library(ggplot2)
# Define counts
num_flav_banned <- sum(sell_flav_vape$flavor_ban == 1, na.rm = FALSE)
num_flav_compliant <- nrow(sell_flav_vape) - num_flav_banned
# Create data frame
compliance_df <- data.frame(
Status = c("Out of Compliance", "In Compliance"),
Count = c(num_flav_banned, num_flav_compliant)
)
# Bar chart
ggplot(compliance_df, aes(x = Status, y = Count, fill = Status)) +
geom_bar(stat = "identity", width = 0.6) +
geom_text(aes(label = Count), vjust = -0.5, size = 5) +
scale_fill_manual(values = c("Out of Compliance" = "#e74c3c",
"In Compliance" = "darkblue")) +
labs(title = "Delivery-Based Retailer Compliance with Flavor Ban Laws",
x = NULL,
y = "Number of Retailers") +
theme_minimal(base_size = 14) +
theme(legend.position = "none")
library(dplyr)
library(ggplot2)
library(dplyr)
# Define counts
num_flav_banned <- sum(sell_flav_vape$flavor_ban == 1, na.rm = FALSE)
num_flav_compliant <- nrow(sell_flav_vape) - num_flav_banned
total <- nrow(sell_flav_vape)
# Create data frame with percentages
compliance_df <- data.frame(
Status = c("Out of Compliance", "In Compliance"),
Percent = c(num_flav_banned, num_flav_compliant) / total * 100
)
# Bar chart with percentages
ggplot(compliance_df, aes(x = Status, y = Percent, fill = Status)) +
geom_bar(stat = "identity", width = 0.6) +
geom_text(aes(label = paste0(round(Percent, 1), "%")), vjust = -0.5, size = 5) +
scale_fill_manual(values = c("Out of Compliance" = "#e74c3c",
"In Compliance" = "darkblue")) +
labs(title = "Delivery-Based Retailer Compliance with Flavor Ban Laws",
x = NULL,
y = "Percentage of Retailers") +
theme_minimal(base_size = 14) +
theme(legend.position = "none")
ggplot(compliance_df, aes(x = Status, y = Percent, fill = Status)) +
geom_bar(stat = "identity", width = 0.6) +
geom_text(aes(label = paste0(round(Percent, 1), "%")), vjust = -0.5, size = 5) +
scale_fill_manual(values = c("Out of Compliance" = "#e74c3c",
"In Compliance" = "darkblue")) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +  # <-- this line fixes the cutoff
labs(title = "Delivery-Based Retailer Compliance with Flavor Ban Laws",
x = NULL,
y = "Percentage of Retailers") +
theme_minimal(base_size = 14) +
theme(legend.position = "none")
p <- ggplot(compliance_df, aes(x = Status, y = Percent, fill = Status)) +
geom_bar(stat = "identity", width = 0.6) +
geom_text(aes(label = paste0(round(Percent, 1), "%")), vjust = -0.5, size = 5) +
scale_fill_manual(values = c("Out of Compliance" = "#e74c3c",
"In Compliance" = "darkblue")) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +  # <-- this line fixes the cutoff
labs(title = "Delivery-Based Retailer Compliance with Flavor Ban Laws",
x = NULL,
y = "Percentage of Retailers") +
theme_minimal(base_size = 14) +
theme(legend.position = "none")
ggsave("compliance_plot.png", plot = p, width = 8, height = 6, dpi = 300)
p <- ggplot(compliance_df, aes(x = Status, y = Percent, fill = Status)) +
geom_bar(stat = "identity", width = 0.6) +
geom_text(aes(label = paste0(round(Percent, 1), "%")), vjust = -0.5, size = 5) +
scale_fill_manual(values = c("Out of Compliance" = "#e74c3c",
"In Compliance" = "darkblue")) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +  # <-- this line fixes the cutoff
labs(title = "Delivery-Based Retailer Compliance with Flavor Ban Laws",
x = NULL,
y = "Percentage of Retailers") +
theme_minimal(base_size = 14) +
theme(legend.position = "none")
ggsave("compliance_plot.png", plot = p, width = 8, height = 6, dpi = 300)
ggplot(compliance_df, aes(x = Status, y = Percent, fill = Status)) +
geom_bar(stat = "identity", width = 0.6) +
geom_text(aes(label = paste0(round(Percent, 1), "%")), vjust = -0.5, size = 5) +
scale_fill_manual(values = c("Out of Compliance" = "#e74c3c",
"In Compliance" = "darkblue")) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +  # <-- this line fixes the cutoff
labs(title = "Delivery-Based Retailer Compliance with Flavor Ban Laws",
x = NULL,
y = "Percentage of Retailers") +
theme_minimal(base_size = 14) +
theme(legend.position = "none")
p <- ggplot(compliance_df, aes(x = Status, y = Percent, fill = Status)) +
geom_bar(stat = "identity", width = 0.6) +
geom_text(aes(label = paste0(round(Percent, 1), "%")), vjust = -0.5, size = 5) +
scale_fill_manual(values = c("Out of Compliance" = "#e74c3c",
"In Compliance" = "darkblue")) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +  # <-- this line fixes the cutoff
labs(title = "Delivery-Based Retailer Compliance with Flavor Ban Laws",
x = NULL,
y = "Percentage of Retailers") +
theme_minimal(base_size = 14) +
theme(legend.position = "none")
# Save as PNG with white background
ggsave("compliance_plot.png",
plot = p,
width = 8,
height = 6,
dpi = 300,
bg = "white")
